@model AIFitnessProject.Core.Models.DailyDietPlan.AddDailyDietPlanViewModel
@{
    ViewData["Title"] = "Създай дневен хранителен план";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
<style>
    :root {
        --primary: #3CB371;
        --secondary: #27ae60;
        --accent: #ec4899;
    }

    element.style {
        margin-right: 4em;
    }

    
    .exercise-card {
        transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
        opacity: 0;
        transform: translateY(20px);
        animation: cardEntrance 0.6s ease forwards;
        border: 2px solid transparent;
        background: linear-gradient(145deg, #ffffff, #f8f9fa);
    }

    .mt-2 {
        margin-top: .5rem !important;
        color: #3CB371 !important;
        margin-right: 4em;
    }

    .mb-2{
        color: #3CB371 !important;
    }

    .mb-3 {
        margin-bottom: 1rem !important;
        color: black;
    }

    @@keyframes cardEntrance {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .text-muted {
        --bs-text-opacity: 1;
        color: #3CB371 !important;
    }

    

    fas fa-cloud-upload-alt fa-3x text-primary mb-3{
        color: #3CB371 !important;
    }

    .pagination-container {
        position: relative;
        overflow: hidden;
        margin: 2rem 0;
    }

    .form-floating > label {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        padding: 0.2rem 0.75rem;
        overflow: hidden;
        text-align: start;
        text-overflow: ellipsis;
        white-space: nowrap;
        pointer-events: none;
        color: black;
        border: var(--bs-border-width) solid transparent;
        transform-origin: 0 0;
        transition: opacity .1s ease-in-out, transform .1s ease-in-out;
    }

    .filter-container select.filter-control,
    .filter-container input.filter-control {
        border-radius: 0.25rem;
        border: 1px solid #ced4da;
        padding: 0.5rem;
        height: 53px;
        font-size: 1rem;
        transition: border-color 0.3s;
    }

        .filter-container select.filter-control:focus,
        .filter-container input.filter-control:focus {
            border-color: #86b7fe;
            box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
        }

    .page-btn {
        transition: all 0.3s ease;
        min-width: 45px;
        border-radius: 8px;
        background: linear-gradient(145deg, #ffffff, #f8f9fa);
        box-shadow: 5px 5px 10px #d1d5db, -5px -5px 10px #ffffff;
        border: none;
        margin: 0 3px;
    }

        .page-btn.active {
            background: linear-gradient(145deg, var(--primary), var(--secondary));
            color: white !important;
            box-shadow: inset 3px 3px 5px rgba(0,0,0,0.1), inset -3px -3px 5px rgba(255,255,255,0.2);
        }

    .nav-btn {
        padding: 8px 25px;
        border-radius: 10px;
        background: linear-gradient(45deg, var(--primary), var(--secondary));
        color: #1e3d29 !important;
        display: flex;
        align-items: center;
        gap: 8px;
        transition: all 0.3s ease;
        border: none;
    }

        .nav-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(99, 102, 241, 0.3);
        }

    .exercise-card.selected {
        border: 2px solid var(--primary);
        background: rgba(99, 102, 241, 0.05);
    }

    .glow {
        animation: glowPulse 2s infinite alternate;
    }

    @@keyframes glowPulse {
        from {
            box-shadow: 0 0 10px rgba(99, 102, 241, 0.2);
        }

        to {
            box-shadow: 0 0 20px rgba(99, 102, 241, 0.4);
        }
    }

    .muscle-tag {
        background: var(--primary);
        color: white;
        padding: 4px 12px;
        border-radius: 20px;
        font-size: 0.9em;
    }

    .difficulty-badge {
        position: absolute;
        top: 10px;
        right: 10px;
        padding: 6px 15px;
        border-radius: 15px;
        color: white;
    }

    .difficulty-easy {
        background: #4ade80;
    }

    .difficulty-medium {
        background: #f59e0b;
    }

    .difficulty-hard {
        background: #ef4444;
    }

    .upload-section {
        border: 2px dashed #3CB371;
        border-radius: 15px;
        transition: all 0.3s ease;
    }

        .upload-section:hover {
            background: rgba(40, 167, 69, 0.05);
            transform: scale(1.02);
        }


    .glass-card {
        backdrop-filter: blur(10px);
        background: rgba(255, 255, 255, 0.2);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 1rem;
    }

    .gradient-text {
        background: linear-gradient(45deg, #f093fb, #f5576c);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 700;
    }

    .badge-custom {
        font-size: 0.9rem;
        padding: 0.5rem 1rem;
        border-radius: 2rem;
        background: linear-gradient(to right, #fa709a, #fee140);
        color: #fff;
    }

    .btn-custom {
        border-radius: 2rem;
        font-weight: 500;
        transition: all 0.2s ease-in-out;
    }

        .btn-custom:hover {
            filter: brightness(1.1);
            transform: translateY(-2px);
        }

    .add-btn{
        background: #3CB371;
        color : white;
    }

    .add-btn:hover {
        background: #3CB371;
        color: black;
    }

    .hover-zoom img {
        transition: transform 0.3s ease;
    }

    .hover-zoom:hover img {
        transform: scale(1.05);
    }

    .workout-card {
        position: relative;
        overflow: hidden;
    }

    .card-lift {
        transition: all 0.3s ease;
    }

        .card-lift:hover {
            transform: translateY(-8px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

    .hr-glow {
        border: none;
        height: 2px;
        background: linear-gradient(to right, transparent, rgba(255,255,255,0.6), transparent);
    }
   
    .exercise-bg-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: radial-gradient(rgba(255,255,255,0.1), transparent 70%);
        pointer-events: none;
        z-index: 0;
    }

    .exercise-item {
        z-index: 1; 
    }

    .series-reps {
        font-size: 0.8rem;
        padding: 0.5rem 0.8rem;
    }

    .text-accent-secondary {
        color: #16a085;
        font-weight: 500;
    }

    .shadow-lg {
        box-shadow: 0 20px 30px rgba(0, 0, 0, 0.15) !important;
    }

    .card-header{
        background: linear-gradient(135deg, #1e3d29, #27ae60);
    }

    .btn.disabled, .btn:disabled, fieldset:disabled .btn {
        color: var(--bs-btn-disabled-color);
        pointer-events: none;
        background-color: #3CB371;
        border-color: #3CB371;
        opacity: var(--bs-btn-disabled-opacity);
    }

    .highlight-badge {
        background-color: #ffedcc;
        color: #d97706;
        font-weight: bold;
        border: 1px solid #d97706;
    }

    .day {
        --bs-bg-opacity: 1;
        background-color: #1e6b38 !important;
    }

    .justify-content-end {
        justify-content: center !important;
    }

    .btn-primary {
        --bs-btn-color: #fff;
        --bs-btn-bg: #3CB371;
        --bs-btn-border-color: #3CB371;
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: #3CB371;
        --bs-btn-hover-border-color: #3CB371;
        --bs-btn-focus-shadow-rgb: 49, 132, 253;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: #3CB371;
        --bs-btn-active-border-color: #3CB371;
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: #fff;
        --bs-btn-disabled-bg: #3CB371;
        --bs-btn-disabled-border-color: #3CB371;
    }

    .btn-outline-danger {
        --bs-btn-color: black;
        --bs-btn-border-color: #3CB371;
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: #3CB371;
        --bs-btn-hover-border-color: #3CB371;
        --bs-btn-focus-shadow-rgb: 220, 53, 69;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: #3CB371;
        --bs-btn-active-border-color: #3CB371;
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: #3CB371;
        --bs-btn-disabled-bg: transparent;
        --bs-btn-disabled-border-color: #3CB371;
        --bs-gradient: none;
    }

    .text-primary{
        color: #3CB371;
    }
</style>


<div class="container py-5">
    <div class="card border-0 shadow-lg rounded-3 glow">
        <div class="card-header bg-primary text-white rounded-top-3 py-4">
            <h2 class="mb-0 animate__animated animate__fadeInDown">
                <i class="fas fa-dumbbell me-2"></i>Създай нов дневен хранителен план
            </h2>
        </div>
        <div class="card-body p-4">
           
            <form asp-action="Add" asp-controller="DailyDietPlan" asp-area="Dietitian" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="DietId" />
              
                <div class="row g-4 mb-5 animate__animated animate__fadeIn">
                    <div class="col-md-6">
                        <div class="form-floating">
                            <input asp-for="Title" class="form-control" placeholder="Заглавие" required />
                            <label>🏷️ Заглавие на дневния хранителен режим</label>
                        </div>
                        <span asp-validation-for="Title" class="text-danger"></span>
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="DificultyLevel" class="form-select" required>
                                <option value="">Избери ниво на трудност</option>
                                <option value="Лесно">Лесно</option>
                                <option value="Средно-Напреднал">Средно-Напреднал</option>
                                <option value="Трудно">Трудно</option>
                            </select>
                            <span asp-validation-for="DificultyLevel" class="text-danger"></span>
                            <label>🔥 Ниво на трудност</label>
                        </div>
                        
                    </div>
                    <div class="col-md-3">
                        <div class="form-floating">
                            <select asp-for="DayOfWeek" class="form-select" required>
                                <option value="Понеделник">Понеделник</option>
                                <option value="Вторник">Вторник</option>
                                <option value="Сряда">Сряда</option>
                                <option value="Четвъртък">Четвъртък</option>
                                <option value="Петък">Петък</option>
                                <option value="Събота">Събота</option>
                                <option value="Неделя">Неделя</option>
                            </select>
                            <label>📅 Ден от седмицата</label>
                        </div>
                    </div>
                </div>

  
               
                <div class="upload-section mb-5 p-5 text-center animate__animated animate__zoomIn">
                    <div class="file-upload-wrapper position-relative">
                  
                        <input type="file" asp-for="ImageUrl" id="imageInput" class="form-control visually-hidden" accept="image/*" required />
                        <label for="imageInput" class="file-upload-label">
                            <div class="d-flex flex-column align-items-center">
                                <i class="fas fa-cloud-upload-alt fa-3x text-primary mb-3"></i>
                                <h5 class="mb-2">Провлачете снимка или кликнете за избор</h5>
                                <p class="text-muted mb-0">Максимален размер: 5MB</p>
                                <p class="text-muted">Формати: .jpg, .png</p>
                            </div>
                        </label>
                    
                        <div id="imagePreviewContainer" class="mt-3" style="display:none; position: relative; max-width: 300px; margin: 0 auto;">
                            <img id="imagePreview" src="" alt="Image Preview" style="width: 100%; height: auto; border: 1px solid #ddd; border-radius: 5px;" />
                            <button type="button" id="removeImageButton" style="position: absolute; top: 5px; right: 5px; background: rgba(255,255,255,0.8); border: none; border-radius: 50%; padding: 5px;">
                           
                                <i class="fas fa-times" style="color: red;"></i>
                            </button>
                        </div>
                    </div>
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                </div>

              
                <div class="filter-section mb-4">
                    <div class="card p-3">
                        <h4 class="mb-3">Филтрирай храните</h4>
                        <div class="row">
                            <div class="col-md-6 filter-container">
                                <div class="form-floating">
                                    <select id="filterMuscleGroup" class="form-select filter-control">
                                        <option value="">Избери време за храненето</option>
                                        <option value="Закуска">Закуска</option>
                                        <option value="Обяд">Обяд</option>
                                        <option value="Вечеря">Вечеря</option>
                                        <option value="Междинно хранене">Междинно хранене</option>
                                    </select>
                                    <label for="filterMuscleGroup">💪 Време за хранене</label>
                                </div>
                                <span id="filterMuscleGroupValidation" class="text-danger"></span>
                            </div>
                            <div class="col-md-6 filter-container">
                                <div class="form-floating">
                                    <select id="filterDifficulty" class="form-select filter-control">
                                        <option value="">Избери ниво на трудност</option>
                                        <option value="Лесно">Лесно</option>
                                        <option value="Средно">Средно</option>
                                        <option value="Трудно">Трудно</option>
                                    </select>
                                    <label for="filterDifficulty">🔥 Ниво на трудност</label>
                                </div>
                                <span id="filterDifficultyValidation" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

               
                <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 mb-4" id="exercisesContainer">
                    @foreach (var meal in Model.Meals)
                    {
                        <div class="col exercise-card workout-card animate__animated"
                             data-id="@meal.Id"
                             data-muscle-group="@meal.MealTime"
                             data-difficulty-level="@meal.DificultyLevel">
                            <div class="card h-100 border-0 shadow-sm card-lift">
                                <img src="@meal.ImageUrl" class="card-img-top hover-zoom" alt="@meal.Name" style="height: 200px; object-fit: cover;">
                                <div class="card-body position-relative">
                                    <div class="difficulty-badge @GetDifficultyClass(meal.DificultyLevel)">
                                        @meal.DificultyLevel
                                    </div>


                                    <div class="form-check">
                                        <input type="checkbox" name="SelectedExercises" value="@meal.Id" class="form-check-input workout-checkbox">
                                        <h5 class="card-title mt-2">@meal.Name</h5>
                                    </div>
                               
                                    <div class="d-flex justify-content-between align-items-center mb-3">
                                        <div>

                                            <span class="badge highlight-badge me-2">@meal.MealTime</span>
                                            <span class="badge highlight-badge me-2">
                                                <i class="fas fa-redo me-1"></i>@meal.Calories колории
                                            </span>
                                      
                                           
                                        </div>
                                    </div>
                                    <div class="mt-3">
                                        <a href="@meal.VideoUrl" target="_blank" class="btn btn-sm btn-outline-danger">
                                            <i class="fas fa-video me-2"></i>Видео
                                        </a>
                                    </div>
                                </div>
                                <div class="exercise-bg-overlay"></div>
                            </div>
                        </div>
                    }
                </div>

         
                <div class="pagination-container">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center gap-2">
                            <li class="page-item">
                                <button class="page-btn nav-btn" id="prevPage">
                                    <i class="fas fa-chevron-left"></i> Предишна
                                </button>
                            </li>
                          
                            <li class="page-item">
                                <button class="page-btn nav-btn" id="nextPage">
                                    Следваща <i class="fas fa-chevron-right"></i>
                                </button>
                            </li>
                        </ul>
                    </nav>
                </div>

            
                <input type="hidden" asp-for="SelectedMealIds" id="selectedWorkoutIds" />

            
                <div class="d-flex justify-content-end gap-3 mt-5">
                    <button type="submit" id="attachWorkoutBtn" class="btn btn-primary btn-lg px-5" disabled>
                        <i class="fas fa-save me-2"></i>Запази
                    </button>
                
                    <a asp-route-id="@Model.DietId" asp-action="All" asp-controller="DailyDietPlan" asp-area="Dietitian" class="btn btn-outline-secondary btn-lg px-5">
                        <i class="fas fa-times me-2"></i>Отказ
                    </a>
                    <a asp-route-id="@Model.DietId" asp-action="Add" asp-controller="Meal" asp-area="Dietitian" class="btn add-btn">
                        ➕ Създай храна
                    </a>
                </div>

            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const itemsPerPage = 6;
            let currentPage = 1;
           
            const allExercises = Array.from(document.querySelectorAll('.exercise-card'));
            let filteredExercises = allExercises.slice();

           
            function updatePagination() {
                const totalPages = Math.ceil(filteredExercises.length / itemsPerPage);
                document.querySelectorAll('.pagination [data-page]').forEach(btn => btn.parentElement.remove());
                let pagesHtml = '';
                for (let i = 1; i <= totalPages; i++) {
                    pagesHtml += `<li class="page-item">
                                        <button class="page-btn ${i === currentPage ? 'active' : ''}" data-page="${i}">
                                            ${i}
                                        </button>
                                    </li>`;
                }
                const nextBtnLi = document.getElementById('nextPage').parentElement;
                nextBtnLi.insertAdjacentHTML('beforebegin', pagesHtml);
                document.querySelectorAll('.pagination [data-page]').forEach(btn => {
                    btn.addEventListener('click', function () {
                        currentPage = parseInt(this.dataset.page);
                        showPage(currentPage);
                    });
                });
                document.getElementById('prevPage').disabled = (currentPage === 1);
                document.getElementById('nextPage').disabled = (currentPage === totalPages || totalPages === 0);
            }

          
            function showPage(page) {
                currentPage = page;
                const startIndex = (page - 1) * itemsPerPage;
                const endIndex = startIndex + itemsPerPage;

               
                allExercises.forEach(card => {
                    card.style.display = 'none';
                    card.classList.remove('animate__fadeIn');
                });

                
                filteredExercises.slice(startIndex, endIndex).forEach(card => {
                    card.style.display = 'block';
                    card.classList.add('animate__fadeIn');
                });
                updatePagination();
            }

         
            function filterExercises() {
                const muscleFilter = document.getElementById('filterMuscleGroup').value.trim().toLowerCase();
                const difficultyFilter = document.getElementById('filterDifficulty').value.trim().toLowerCase();
                filteredExercises = allExercises.filter(card => {
                    const cardMuscle = (card.dataset.muscleGroup || '').trim().toLowerCase();
                    const cardDifficulty = (card.dataset.difficultyLevel || '').trim().toLowerCase();
                    const muscleMatch = (muscleFilter === "" || cardMuscle === muscleFilter);
                    const difficultyMatch = (difficultyFilter === "" || cardDifficulty === difficultyFilter);
                    return muscleMatch && difficultyMatch;
                });
                currentPage = 1;
                showPage(currentPage);
            }

            document.getElementById('filterMuscleGroup').addEventListener('change', filterExercises);
            document.getElementById('filterDifficulty').addEventListener('change', filterExercises);

           
            document.querySelectorAll('.workout-checkbox').forEach(checkbox => {
                checkbox.addEventListener('change', function () {
                    const selectedIds = Array.from(document.querySelectorAll('.workout-checkbox:checked'))
                        .map(cb => cb.closest('.exercise-card').dataset.id);
                  
                    document.getElementById('selectedWorkoutIds').value = selectedIds.join(',');
                    document.getElementById('attachWorkoutBtn').disabled = selectedIds.length === 0;
                    allExercises.forEach(card => card.classList.remove('selected'));
                    selectedIds.forEach(id => {
                        const card = document.querySelector(`.exercise-card[data-id="${id}"]`);
                        if (card) {
                            card.classList.add('selected');
                        }
                    });
                });
            });

          
            document.getElementById('prevPage').addEventListener('click', function () {
                if (currentPage > 1) {
                    currentPage--;
                    showPage(currentPage);
                }
            });
            document.getElementById('nextPage').addEventListener('click', function () {
                const totalPages = Math.ceil(filteredExercises.length / itemsPerPage);
                if (currentPage < totalPages) {
                    currentPage++;
                    showPage(currentPage);
                }
            });

           
            filterExercises();


            const imageInput = document.getElementById('imageInput');
            const previewContainer = document.getElementById('imagePreviewContainer');
            const previewImage = document.getElementById('imagePreview');
            const removeImageButton = document.getElementById('removeImageButton');

            imageInput.addEventListener('change', function (event) {
                const file = event.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (e) {
                        previewImage.src = e.target.result;
                        previewContainer.style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                } else {
                    previewContainer.style.display = 'none';
                }
            });

            removeImageButton.addEventListener('click', function () {
                imageInput.value = "";
                previewContainer.style.display = 'none';
            });
        });
    </script>
}

@functions {
    
    private string GetDifficultyClass(string difficulty)
    {
        return difficulty switch
        {
            "Лесно" => "difficulty-easy",
            "Средно" => "difficulty-medium",
            "Трудно" => "difficulty-hard",
            _ => ""
        };
    }
}

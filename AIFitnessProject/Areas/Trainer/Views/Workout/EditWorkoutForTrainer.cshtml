@using AIFitnessProject.Core.Models.Workout
@model EditWorkoutViewModelForTrainer

@{
    ViewData["Title"] = "Редактирай тренировъчен план";
}

<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            background: linear-gradient(135deg, #eef2f7 0%, #d9e2ec 100%);
            font-family: 'Montserrat', sans-serif;
            color: #2A2D72;
            margin: 0;
            padding: 0;
            overflow-x: hidden;
        }

        .container-main {
            max-width: 1400px;
            padding: 40px 20px;
            margin: 20px auto;
        }

        .workout-section {
            background: #fff;
            border-radius: 30px;
            box-shadow: 0 10px 30px rgba(42,45,114,0.1);
            padding: 50px;
            border: 3px solid #E8F0FE;
            position: relative;
            transition: all 0.3s ease;
            background: linear-gradient(145deg, #ffffff 0%, #f9fbff 100%);
        }

        .workout-section:hover {
            box-shadow: 0 15px 40px rgba(42,45,114,0.15);
            transform: translateY(-5px);
        }

        .workout-title {
            font-size: 3rem;
            background: linear-gradient(135deg, #2A2D72 0%, #6C63FF 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 30px;
            text-align: center;
            text-shadow: 0 2px 4px rgba(42,45,114,0.2);
            position: relative;
        }

        .workout-title::after {
            content: '';
            position: absolute;
            width: 100px;
            height: 4px;
            background: linear-gradient(90deg, #6C63FF, #2A2D72);
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            border-radius: 2px;
        }

        .form-group {
            position: relative;
            margin-bottom: 30px;
        }

        .form-control {
            border: 2px solid #E8F0FE;
            border-radius: 15px;
            padding: 15px 20px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.05);
            transition: all 0.3s ease;
            background: #fff;
            font-size: 1.1rem;
            height: 55px;
        }

        .form-control:focus {
            border-color: #6C63FF;
            box-shadow: 0 6px 18px rgba(108,99,255,0.2);
            transform: translateY(-2px);
        }

        .form-group label {
            position: absolute;
            top: -12px;
            left: 20px;
            background: #fff;
            padding: 0 10px;
            font-size: 0.95rem;
            color: #2A2D72;
            font-weight: 600;
            letter-spacing: 0.5px;
        }

        /* Подобрен контейнер за качване на файлове */
        .container-upload {
            padding: 25px;
            background: linear-gradient(135deg, #6dd5ed 0%, #2193b0 100%);
            border-radius: 20px;
            box-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);
            width: 280px;
            height: 160px;
            margin: 40px auto 30px;
            position: relative;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .container-upload:hover {
            transform: scale(1.03);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.2);
        }

        .folder {
            position: absolute;
            top: -40px;
            left: 50%;
            transform: translateX(-50%);
            width: 140px;
            height: 100px;
            animation: float 2.5s infinite ease-in-out;
        }

        .folder .front-side,
        .folder .back-side {
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 12px;
            transition: all 0.3s ease;
        }

        .folder .back-side {
            background: rgba(255, 255, 255, 0.4);
            z-index: 0;
        }

        .folder .front-side {
            background: linear-gradient(135deg, #ffe563 0%, #ffc663 100%);
            box-shadow: 0 12px 25px rgba(0, 0, 0, 0.2);
            z-index: 1;
        }

        .folder .tip {
            background: linear-gradient(135deg, #ff9a56, #ff6f56);
            width: 90px;
            height: 25px;
            border-radius: 15px 15px 0 0;
            position: absolute;
            top: -15px;
            left: 25px;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            z-index: 2;
        }

        .custom-file-upload {
            font-size: 1.2em;
            color: #ffffff;
            background: rgba(255, 255, 255, 0.25);
            border-radius: 12px;
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.1);
            cursor: pointer;
            transition: all 0.3s ease;
            padding: 12px 20px;
            width: 80%;
            text-align: center;
            position: relative;
            z-index: 3;
            font-weight: 600;
        }

        .custom-file-upload:hover {
            background: rgba(255, 255, 255, 0.45);
            transform: scale(1.05);
        }

        .custom-file-upload input[type="file"] {
            display: none;
        }

        .image-preview-container {
            position: relative;
            margin-top: 25px;
        }

        .remove-image {
            position: absolute;
            top: 15px;
            right: 15px;
            background: #FC8181;
            color: white;
            border: none;
            border-radius: 50%;
            width: 35px;
            height: 35px;
            cursor: pointer;
            font-size: 18px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 10px rgba(0,0,0,0.2);
        }

        .remove-image:hover {
            background: #E53E3E;
            transform: scale(1.1);
        }

        @@keyframes float {
            0% { transform: translateX(-50%) translateY(0px); }
            50% { transform: translateX(-50%) translateY(-20px); }
            100% { transform: translateX(-50%) translateY(0px); }
        }

        .action-btn {
            padding: 12px 30px;
            border: none;
            border-radius: 25px;
            color: white;
            font-weight: 600;
            font-size: 1.1rem;
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
            position: relative;
            overflow: hidden;
        }

        .action-btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: rgba(255, 255, 255, 0.2);
            transition: all 0.3s ease;
        }

        .action-btn:hover::before {
            left: 0;
        }

        .edit-btn {
            background: linear-gradient(45deg, #4FD1C5, #38B2AC);
        }

        .delete-btn {
            background: linear-gradient(45deg, #FC8181, #E53E3E);
        }

        .action-btn:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 20px rgba(0,0,0,0.3);
        }

        .action-btn:active {
            transform: translateY(1px);
            box-shadow: 0 3px 10px rgba(0,0,0,0.2);
        }

        .exercise-card {
            background: white;
            border-radius: 25px;
            padding: 30px;
            border: 3px solid #E8F0FE;
            transition: all 0.3s ease;
            position: relative;
            background: linear-gradient(145deg, #ffffff 0%, #f9fbff 100%);
        }

        .exercise-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 15px 30px rgba(42,45,114,0.15);
            border-color: #6C63FF;
        }

        .exercise-card.selected {
            border-color: #4FD1C5;
            background: #F5FDFD;
            transform: translateY(-5px);
        }

        .difficulty-easy { border-left: 6px solid #4FD1C5; }
        .difficulty-medium { border-left: 6px solid #F6AD55; }
        .difficulty-hard { border-left: 6px solid #FC8181; }

        .exercise-image {
            height: 250px;
            object-fit: cover;
            border-radius: 15px;
            border: 3px solid #E8F0FE;
            transition: all 0.3s ease;
            width: 100%;
        }

        .exercise-name {
            font-size: 1.8rem;
            color: #2A2D72;
            margin-bottom: 15px;
        }

        .pagination {
            display: flex;
            justify-content: center;
            gap: 15px;
            margin-top: 30px;
        }

        .pagination-btn {
            padding: 12px 25px;
            border-radius: 25px;
            border: none;
            background: linear-gradient(45deg, #2A2D72, #434190);
            color: white;
            font-weight: 600;
            transition: all 0.3s ease;
            cursor: pointer;
            box-shadow: 0 5px 15px rgba(0,0,0,0.2);
        }

        .pagination-btn:disabled {
            background: #d1d5db;
            cursor: not-allowed;
            box-shadow: none;
        }

        .pagination-btn:hover:not(:disabled) {
            transform: scale(1.05);
            box-shadow: 0 8px 20px rgba(42,45,114,0.3);
        }

        .pagination-info {
            padding: 12px 25px;
            background: #E8F0FE;
            border-radius: 25px;
            color: #2A2D72;
            font-weight: 600;
            box-shadow: 0 4px 10px rgba(0,0,0,0.05);
        }

        .filter-group {
            display: flex;
            gap: 20px;
            margin-bottom: 30px;
            justify-content: center;
        }

        .filter-group .form-control {
            width: 200px;
            background: #fff;
        }
    </style>
    @functions {
        private string GetDifficultyClass(string difficulty) {
            return difficulty switch {
                "Лесно" => "difficulty-easy",
                "Средно" => "difficulty-medium",
                "Средно-Напреднал" => "difficulty-medium",
                "Трудно" => "difficulty-hard",
                _ => "difficulty-easy"
            };
        }
    }
</head>
<body>
    <div class="container-main">
        <div class="workout-section">
            <h2 class="workout-title">Редактирай: @Model.Title</h2>

            <form asp-action="Edit" method="post" enctype="multipart/form-data">
                <input type="hidden" asp-for="Id" />
                <input type="hidden" asp-for="TrainingPlanId" />
                <input type="hidden" asp-for="UserId" />

                <div class="form-group">
                    <label asp-for="Title">Заглавие</label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="DayOfWeek">Ден от седмицата</label>
                    <select asp-for="DayOfWeek" class="form-control">
                        <option value="Понеделник">Понеделник</option>
                        <option value="Вторник">Вторник</option>
                        <option value="Сряда">Сряда</option>
                        <option value="Четвъртък">Четвъртък</option>
                        <option value="Петък">Петък</option>
                        <option value="Събота">Събота</option>
                        <option value="Неделя">Неделя</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="MuscleGroup">Мускулна група</label>
                    <select asp-for="MuscleGroup" class="form-control">
                        <option value="Гръден кош">Гръден кош</option>
                        <option value="Гръб">Гръб</option>
                        <option value="Рамене">Рамене</option>
                        <option value="Бицепс">Бицепс</option>
                        <option value="Трицепс">Трицепс</option>
                        <option value="Крака">Крака</option>
                        <option value="Корем">Корем</option>
                    </select>
                </div>

                <div class="form-group">
                    <label asp-for="DifficultyLevel">Ниво на трудност</label>
                    <select asp-for="DifficultyLevel" class="form-control">
                        <option value="Лесно">Лесно</option>
                        <option value="Средно">Средно</option>
                        <option value="Средно-Напреднал">Средно-Напреднал</option>
                        <option value="Трудно">Трудно</option>
                    </select>
                </div>

                <div class="form-group text-center">
                    <p class="fw-bold" style="font-size: 1.2rem; color: #2A2D72; margin-bottom: 15px;">Текуща снимка</p>
                    @if (!string.IsNullOrEmpty(Model.ImageUrl))
                    {
                        <img src="@Model.ImageUrl" class="workout-image mb-4" alt="Текуща снимка" style="max-width: 100%; border-radius: 20px; box-shadow: 0 5px 15px rgba(42,45,114,0.1);" />
                    }
                    <p class="fw-bold" style="font-size: 1.2rem; color: #2A2D72; margin-bottom: 15px;">Качи нова снимка</p>
                    <div class="container-upload">
                        <div class="folder">
                            <div class="front-side">
                                <div class="tip"></div>
                            </div>
                            <div class="back-side"></div>
                        </div>
                        <label class="custom-file-upload">
                            <input type="file" name="image" accept="image/*" onchange="previewImage(this)" />
                            Избери файл
                        </label>
                    </div>
                    <div class="image-preview-container">
                        <img id="imagePreview" class="workout-image mt-3" style="display: none; max-width: 100%; border-radius: 20px; box-shadow: 0 5px 15px rgba(42,45,114,0.1);" alt="Предварителен преглед" />
                        <button type="button" class="remove-image" style="display: none;" onclick="removeImagePreview()">X</button>
                    </div>
                </div>

                <h3 class="mt-5 text-center" style="font-size: 2rem; color: #2A2D72;">Упражнения</h3>
                <div id="exercises" class="row g-4">
                    @foreach (var exercise in Model.Exercises)
                    {
                        <div class="col-lg-4 col-md-6">
                            <div class="exercise-card @GetDifficultyClass(exercise.DifficultyLevel)" id="exercise-@exercise.Id">
                                <input type="hidden" name="Exercises[@exercise.Id].Id" value="@exercise.Id" />
                                <input type="hidden" name="Exercises[@exercise.Id].Name" value="@exercise.Name" />
                                <input type="hidden" name="Exercises[@exercise.Id].Description" value="@exercise.Description" />
                                <input type="hidden" name="Exercises[@exercise.Id].MuscleGroup" value="@exercise.MuscleGroup" />
                                <input type="hidden" name="Exercises[@exercise.Id].DifficultyLevel" value="@exercise.DifficultyLevel" />
                                <input type="hidden" name="Exercises[@exercise.Id].Series" value="@exercise.Series" />
                                <input type="hidden" name="Exercises[@exercise.Id].Repetitions" value="@exercise.Repetitions" />
                                <input type="hidden" name="Exercises[@exercise.Id].VideoUrl" value="@exercise.VideoUrl" />
                                @if (!string.IsNullOrEmpty(exercise.ImageUrl))
                                {
                                    <img src="@exercise.ImageUrl" class="exercise-image mb-3" alt="@exercise.Name" />
                                }
                                <h4 class="exercise-name">@exercise.Name</h4>
                                <p style="color: #4B5EAA; line-height: 1.5;">@exercise.Description</p>
                                <p><strong>Мускулна група:</strong> @exercise.MuscleGroup</p>
                                <p><strong>Ниво:</strong> @exercise.DifficultyLevel</p>
                                <p><strong>Серии:</strong> @exercise.Series, <strong>Повторения:</strong> @exercise.Repetitions</p>
                                @if (!string.IsNullOrEmpty(exercise.VideoUrl))
                                {
                                    <a href="@exercise.VideoUrl" target="_blank" class="action-btn edit-btn mt-2 d-inline-block">Гледай Видео</a>
                                }
                                <div class="buttons mt-3 d-flex gap-3 justify-content-center">
                                    <button type="button" class="action-btn edit-btn" onclick="editExercise(@exercise.Id)">Редактирай</button>
                                    <button type="button" class="action-btn delete-btn" onclick="deleteExercise(@exercise.Id)">Изтрий</button>
                                </div>
                            </div>
                        </div>
                    }
                </div>

                <div class="mt-5 text-center">
                    <button type="button" class="action-btn" style="background: linear-gradient(45deg, #2A2D72, #434190); padding: 14px 35px;" onclick="showExerciseListModal()">Добави от списък</button>
                </div>

                <div class="text-center mt-5">
                    <button type="submit" class="action-btn" style="background: linear-gradient(45deg, #2A2D72, #434190); padding: 15px 50px; font-size: 1.2rem;">Запази промените</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Модал за добавяне от списък -->
    <div class="modal fade" id="exerciseListModal" tabindex="-1" aria-labelledby="exerciseListModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header" style="background: linear-gradient(45deg, #2A2D72, #434190); color: white; border-radius: 20px 20px 0 0;">
                    <h5 class="modal-title" id="exerciseListModalLabel">Избери упражнения от списъка</h5>
                    <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="filter-group">
                        <select id="muscleGroupFilter" class="form-control" onchange="applyFilters()">
                            <option value="">Всички мускулни групи</option>
                            <option value="Гръден кош">Гръден кош</option>
                            <option value="Гръб">Гръб</option>
                            <option value="Рамене">Рамене</option>
                            <option value="Бицепс">Бицепс</option>
                            <option value="Трицепс">Трицепс</option>
                            <option value="Крака">Крака</option>
                            <option value="Корем">Корем</option>
                        </select>
                        <select id="difficultyFilter" class="form-control" onchange="applyFilters()">
                            <option value="">Всички нива</option>
                            <option value="Лесно">Лесно</option>
                            <option value="Средно">Средно</option>
                            <option value="Средно-Напреднал">Средно-Напреднал</option>
                            <option value="Трудно">Трудно</option>
                        </select>
                    </div>
                    <div class="row g-4" id="exerciseList"></div>
                    <div class="pagination">
                        <button class="pagination-btn" onclick="changePage(-1)">Предишна</button>
                        <span class="pagination-info" id="pageInfo"></span>
                        <button class="pagination-btn" onclick="changePage(1)">Следваща</button>
                    </div>
                </div>
                <div class="modal-footer" style="background: #f9fbff; border-radius: 0 0 20px 20px;">
                    <button type="button" class="action-btn" style="background: linear-gradient(45deg, #2A2D72, #434190);" onclick="createNewExercise()">Създай упражнение</button>
                    <button type="button" class="action-btn" id="attachBtn" style="background: linear-gradient(45deg, #4FD1C5, #38B2AC);" disabled onclick="attachExercises()">Прикачи упражнения</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentPage = 1;
        const exercisesPerPage = 6;
        let selectedExercises = [];
        let filteredExercises = [];

        // Предаване на AllExercises от модела към JavaScript
        const allExercises = @Html.Raw(Json.Serialize(Model.AllExercises));

        function previewImage(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                reader.onload = function(e) {
                    $('#imagePreview').attr('src', e.target.result).show();
                    $('.remove-image').show();
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function removeImagePreview() {
            $('#imagePreview').hide().attr('src', '');
            $('.remove-image').hide();
            $('input[type="file"]').val('');
        }

        function showExerciseListModal() {
            applyFilters();
            $('#exerciseListModal').modal('show');
        }

        function applyFilters() {
            const muscleGroup = $('#muscleGroupFilter').val();
            const difficulty = $('#difficultyFilter').val();
            
            filteredExercises = allExercises.filter(ex => {
                return (!muscleGroup || ex.muscleGroup === muscleGroup) &&
                       (!difficulty || ex.difficultyLevel === difficulty);
            });
            
            currentPage = 1;
            renderExerciseList();
        }

        function renderExerciseList() {
            const start = (currentPage - 1) * exercisesPerPage;
            const end = start + exercisesPerPage;
            const paginatedExercises = filteredExercises.slice(start, end);
            const container = $('#exerciseList');
            container.empty();

            if (paginatedExercises.length === 0) {
                container.append('<p class="text-center" style="color: #4B5EAA; font-size: 1.2rem;">Няма намерени упражнения.</p>');
            } else {
                paginatedExercises.forEach(ex => {
                    const difficultyClass = getDifficultyClass(ex.difficultyLevel);
                    const isSelected = selectedExercises.includes(ex.id) ? 'selected' : '';
                    container.append(`
                        <div class="col-lg-4 col-md-6">
                            <div class="exercise-card ${difficultyClass} ${isSelected}" data-id="${ex.id}" onclick="toggleExerciseSelection(${ex.id})">
                                ${ex.imageUrl ? `<img src="${ex.imageUrl}" class="exercise-image mb-3" alt="${ex.name}" />` : ''}
                                <h4 class="exercise-name">${ex.name}</h4>
                                <p style="color: #4B5EAA; line-height: 1.5;">${ex.description || 'Няма описание'}</p>
                                <p><strong>Мускулна група:</strong> ${ex.muscleGroup}</p>
                                <p><strong>Ниво:</strong> ${ex.difficultyLevel}</p>
                                <p><strong>Серии:</strong> ${ex.series}, <strong>Повторения:</strong> ${ex.repetitions}</p>
                                ${ex.videoUrl ? `<a href="${ex.videoUrl}" target="_blank" class="action-btn edit-btn mt-2 d-inline-block">Гледай Видео</a>` : ''}
                            </div>
                        </div>
                    `);
                });
            }

            const totalPages = Math.ceil(filteredExercises.length / exercisesPerPage);
            $('#pageInfo').text(`Страница ${currentPage} от ${totalPages || 1}`);
            $('.pagination-btn').eq(0).prop('disabled', currentPage === 1);
            $('.pagination-btn').eq(1).prop('disabled', currentPage === totalPages || totalPages === 0);
        }

        function getDifficultyClass(difficulty) {
            switch(difficulty) {
                case "Лесно": return "difficulty-easy";
                case "Средно": case "Средно-Напреднал": return "difficulty-medium";
                case "Трудно": return "difficulty-hard";
                default: return "difficulty-easy";
            }
        }

        function changePage(delta) {
            currentPage += delta;
            renderExerciseList();
        }

        function toggleExerciseSelection(id) {
            const index = selectedExercises.indexOf(id);
            if (index === -1) {
                selectedExercises.push(id);
            } else {
                selectedExercises.splice(index, 1);
            }
            renderExerciseList();
            $('#attachBtn').prop('disabled', selectedExercises.length === 0);
        }

        function attachExercises() {
            const selected = allExercises.filter(ex => selectedExercises.includes(ex.id));
            console.log('Прикрепени упражнения:', selected);
            // Пример за AJAX заявка:
            /*
            $.ajax({
                url: '/Trainer/Edit/AddExercises',
                method: 'POST',
                data: { workoutId: @Model.Id, exerciseIds: selectedExercises },
                success: function(response) {
                    $('#exerciseListModal').modal('hide');
                    location.reload(); // Обнови страницата след добавяне
                },
                error: function() {
                    alert('Грешка при добавянето на упражнения.');
                }
            });
            */
            $('#exerciseListModal').modal('hide');
        }

        function createNewExercise() {
            alert('Създаване на ново упражнение - да се имплементира!');
        }

        function editExercise(id) {
            alert(`Редактиране на упражнение с ID: ${id}`);
        }

        function deleteExercise(id) {
            if (confirm('Сигурни ли сте, че искате да изтриете това упражнение?')) {
                $(`#exercise-${id}`).remove();
            }
        }
    </script>
</body>
</html>
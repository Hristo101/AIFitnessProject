@using AIFitnessProject.Core.Models.Workout
@model IEnumerable<WorkoutViewModel>

<link rel="stylesheet" href="~/css/Workout/AllWorkout.css" />

<div class="container">
    <!-- Филтри -->
    <div class="filters">
        <select id="muscleGroupFilter">
            <option value="">Търсене по мускулна група</option>
            <option value="Гърди">Гърди</option>
            <option value="Гръб">Гръб</option>
            <option value="Крака">Крака</option>
            <option value="Ръце">Ръце</option>
            <option value="Цяло Тяло">Цяло Тяло</option>
        </select>
        <select id="complexityFilter">
            <option value="">Търсене по сложност</option>
            <option value="Лесно">Лесно</option>
            <option value="Средно">Средно-Напреднал</option>
            <option value="Трудно">Трудно</option>
        </select>
    </div>

    <!-- Грид с тренировките -->
    <div class="workouts-grid">
        @foreach (var workout in Model)
        {
            <div class="workout-card" data-id="@workout.Id" data-muscle-group="@workout.Exercises.First().MuscleGroup" data-complexity="@workout.Exercises.First().DifficultyLevel">
                <!-- Чекбокс за маркиране -->
                <div class="checkbox-container">
                    <input type="checkbox" class="workout-checkbox">
                </div>

                <!-- Снимка -->
                <img src="@workout.ImageUrl" class="workout-image" alt="@workout.Title" />

                <!-- Заглавие и ден от седмицата -->
                <h3>@workout.Title</h3>
                <p>Ден: @workout.DayOfWeek</p>

                <!-- Упражнения -->
                <div class="exercises">
                    @foreach (var exercise in workout.Exercises)
                    {
                        <div class="exercise">
                            <p>@exercise.Name - @exercise.Series серии</p>
                        </div>
                    }
                </div>

                <!-- Бутоните ДЕТАЙЛИ и РЕДАКТИРАЙ -->
                <div class="workout-actions">
                    <a asp-action="Details" asp-controller="Workout" asp-route-id="@workout.Id" class="btn btn-details">Детайли</a>
                    <a asp-action="Edit" asp-controller="Workout" asp-route-id="@workout.Id" asp-route-trainingPlanId="@workout.TrainingPlanId" class="btn btn-edit">Редактирай</a>
                </div>
            </div>
        }
    </div>

    <div class="button-container">
        <a asp-controller="TrainingPlan" asp-action="Details" asp-route-id="@Model.FirstOrDefault()?.TrainingPlanId" class="btn btn-back">⬅ Назад</a>
        <form id="attachWorkoutForm" method="post" asp-action="AttachWorkouts" asp-controller="Workout">
            <input type="hidden" name="selectedWorkoutIds" id="selectedWorkoutIds" />
            <input type="hidden" id="trainingPlanId" name="trainingPlanId" value="@Model.FirstOrDefault()?.TrainingPlanId" />

            <button type="submit" id="attachWorkoutBtn" class="btn btn-attach" disabled>
                📌 Прикачи тренировка
            </button>
            <a id="createWorkoutLink" class="btn btn-create" href="#">➕ Създай тренировка</a>
        </form>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const trainingPlanId = document.getElementById("trainingPlanId").value;
        const createWorkoutLink = document.getElementById("createWorkoutLink");

        if (trainingPlanId && trainingPlanId !== "0") {
            createWorkoutLink.href = '@Url.Action("Add", "Workout", new { trainingPlanId = "__TRAINING_PLAN_ID__" })'
                .replace("__TRAINING_PLAN_ID__", trainingPlanId);
        } else {
            createWorkoutLink.href = "#";
            createWorkoutLink.style.display = "none";
        }
    });

    document.querySelectorAll('select').forEach(select => {
        select.addEventListener('change', filterWorkouts);
    });

    function filterWorkouts() {
        const muscleGroup = document.getElementById('muscleGroupFilter').value;
        const complexity = document.getElementById('complexityFilter').value;

        document.querySelectorAll('.workout-card').forEach(card => {
            const cardMuscle = card.dataset.muscleGroup;
            const cardComplexity = card.dataset.complexity;

            const muscleMatch = !muscleGroup || cardMuscle === muscleGroup;
            const complexityMatch = !complexity || cardComplexity === complexity;

            card.style.display = (muscleMatch && complexityMatch) ? 'block' : 'none';
        });
    }

    document.querySelectorAll('.workout-checkbox').forEach(checkbox => {
        checkbox.addEventListener('change', updateSelection);
    });

    function updateSelection() {
        const selectedWorkouts = Array.from(document.querySelectorAll('.workout-checkbox:checked'))
            .map(cb => cb.closest('.workout-card').dataset.id);

        document.getElementById('selectedWorkoutIds').value = selectedWorkouts.join(',');
        document.getElementById('attachWorkoutBtn').disabled = selectedWorkouts.length === 0;

        document.querySelectorAll('.workout-card').forEach(card => {
            card.classList.remove('selected');
        });

        selectedWorkouts.forEach(id => {
            document.querySelector(`.workout-card[data-id='${id}']`).classList.add('selected');
        });
    }
</script>
@using AIFitnessProject.Core.Models.TrainingPlan
@model TrainingPlanDetailsViewModel
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@{
    ViewData["Title"] = Model.Name;
    var requestToken = Xsrf.GetAndStoreTokens(Context).RequestToken;
}

<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Name - AI Fitness</title>

    <!-- Стилове и ресурси -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        :root {
            --primary-color: #6366f1;
            --secondary-color: #3b82f6;
            --accent-color: #f59e0b;
            --dark-color: #1e293b;
            --light-color: #f8fafc;
            --glass-effect: rgba(255, 255, 255, 0.95);
        }

        body {
            background: linear-gradient(135deg, #f3f4f6 0%, #e5e7eb 100%);
            font-family: 'Inter', sans-serif;
            min-height: 100vh;
        }

        .hero-section {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            padding: 6rem 0;
            position: relative;
            overflow: hidden;
        }

        .training-image-container {
            position: relative;
            display: inline-block;
        }

        #particles-below,
        #particles-above {
            position: absolute;
            width: 100%;
            height: 100%;
            pointer-events: none;
        }

        #particles-below {
            top: 0;
            left: 0;
            z-index: 1;
        }

        .plan-image {
            border-radius: 1.5rem;
            box-shadow: 0 25px 50px -12px rgba(0,0,0,0.25);
            transition: transform 0.3s ease;
            width: 100%;
            height: 400px;
            object-fit: cover;
            border: 3px solid #fff;
            position: relative;
            z-index: 2;
        }

        #particles-above {
            top: 0;
            left: 0;
            z-index: 3;
        }

        .workout-card {
            background: var(--glass-effect);
            backdrop-filter: blur(16px);
            border-radius: 1.5rem;
            border: 1px solid rgba(255, 255, 255, 0.3);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            margin-bottom: 2rem;
            overflow: hidden;
            transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .exercise-card {
            background: white;
            border-radius: 1rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            transition: transform 0.3s ease, box-shadow 0.3s ease, border-color 0.3s ease;
            position: relative;
            overflow: hidden;
            border: 2px solid transparent;
        }

            .exercise-card:hover {
                transform: translateY(-5px) scale(1.02);
                box-shadow: 0 12px 20px rgba(0, 0, 0, 0.15);
                border-color: var(--primary-color);
            }

        .difficulty-badge {
            position: absolute;
            top: 1rem;
            right: 1rem;
            padding: 0.5rem 1rem;
            border-radius: 9999px;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.75rem;
        }

            .difficulty-badge.lesen {
                background: #d1fae5;
                color: #065f46;
            }

            .difficulty-badge.sreden {
                background: #fef3c7;
                color: #92400e;
            }

            .difficulty-badge.truden {
                background: #fee2e2;
                color: #b91c1c;
            }

        .hover-zoom {
            overflow: hidden;
            border-radius: 0.75rem;
        }

            .hover-zoom img {
                transition: transform 0.4s ease;
            }

            .hover-zoom:hover img {
                transform: scale(1.05);
            }

        .btn-gradient {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            border: none;
            padding: 1rem 2rem;
            border-radius: 0.75rem;
            position: relative;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .highlight-badge {
            background-color: #ffedcc;
            color: #d97706;
            font-weight: bold;
            border: 1px solid #d97706;
        }

        .comment-section {
            margin-top: 20px;
            transition: all 0.3s ease;
            opacity: 0;
            height: 0;
            overflow: hidden;
        }

            .comment-section.active {
                opacity: 1;
                height: auto;
            }

        .disagree-text {
            font-size: 0.9em;
            color: #ff4444;
            margin-top: 10px;
            display: none;
        }

        .submit-comment-btn {
            margin-top: 15px;
            background: linear-gradient(135deg, #ff6b6b, #ff4444);
            color: white;
            border: none;
            padding: 8px 20px;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s ease;
        }

            .submit-comment-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(255, 107, 107, 0.4);
            }

        .container.input-container {
            position: relative;
            width: 100%;
            margin-top: 15px;
        }

            .container.input-container .inp {
                width: 100%;
                padding: 10px;
                border: 1.5px solid rgba(0, 167, 161, 0.272);
                outline: none;
                margin-top: 20px;
                border-radius: 5px;
                color: rgba(0, 167, 181, 0.62);
                background: rgba(41, 41, 41);
                font-size: 1em;
            }

            .container.input-container .content {
                position: absolute;
                left: 0;
                margin-top: 20px;
                padding: 10px;
                text-transform: uppercase;
                font-size: 1em;
                pointer-events: none;
                color: rgba(0, 167, 161, 0.272);
                transition: 0.5s;
            }

            .container.input-container input:valid ~ span,
            .container.input-container input:focus ~ span {
                color: rgb(10, 164, 159);
                transform: translateX(10px) translateY(-7px);
                font-size: 0.9em;
                padding: 0 10px;
                background: rgb(41, 41, 41);
                border-left: 2px solid rgba(0, 167, 161, 0.272);
                border-right: 2px solid rgba(0, 167, 161, 0.272);
            }
    </style>
</head>
<body>
    <!-- Anti-Forgery Token -->
    <input type="hidden" id="__RequestVerificationToken" name="__RequestVerificationToken" value="@requestToken">

    <!-- Hero Section -->
    <section class="hero-section">
        <div class="container text-center text-white" data-aos="zoom-in">
            <h1 class="display-3 fw-bold mb-4">@Model.Name</h1>
            <p class="lead mb-5 opacity-90">@Model.Description</p>
            <div class="training-image-container">
                <div id="particles-below"></div>
                <img src="@Model.ImageUrl" alt="Training Plan" class="plan-image img-fluid" data-aos="fade-up">
                <div id="particles-above"></div>
            </div>
        </div>
    </section>

    <!-- Workouts Section -->
    <div class="container py-6">
        <div class="alert alert-info mb-5" role="alert">
            🚨 Ако не сте съгласни с някое от упражненията, моля маркирайте го и напишете вашите забележки в полето за коментар.
        </div>

        <div id="workouts-container" class="row g-4">
            @foreach (var workout in Model.Workouts)
            {
                <div class="col-12 workout-card-container" data-aos="fade-up">
                    <div class="workout-card p-5">
                        <div class="d-flex justify-content-between align-items-center mb-5">
                            <div>
                                <h2 class="h1 fw-bold mb-2">@workout.Title</h2>
                                <div class="d-flex align-items-center gap-2">
                                    <span class="badge bg-primary">@workout.DayOfWeek</span>
                                    <span class="text-muted">@workout.Exercises.Count упражнения</span>
                                </div>
                            </div>
                            <img src="@workout.ImageUrl" alt="@workout.Title" class="rounded-circle" style="width: 150px; height: 150px; object-fit: cover; border: 3px solid #fff; box-shadow: 0 0 10px rgba(0,0,0,0.2);">
                        </div>

                        <div class="row g-4">
                            @foreach (var exercise in workout.Exercises)
                            {
                                <div class="col-md-6 col-lg-4">
                                    <div class="exercise-card">
                                        <input type="checkbox" class="exercise-checkbox"
                                               id="ex-check-@exercise.Id"
                                               onchange="toggleComment(@exercise.Id)">
                                        <span class="difficulty-badge @exercise.DifficultyLevel.ToLower()">
                                            @exercise.DifficultyLevel
                                        </span>
                                        <div class="hover-zoom mb-3">
                                            <img src="@exercise.ImageUrl" class="img-fluid" alt="@exercise.Name">
                                        </div>
                                        <h5 class="fw-bold mb-2">@exercise.Name</h5>
                                        <p class="text-muted mb-3">@exercise.Description</p>
                                        <div class="d-flex justify-content-between align-items-center mb-3">
                                            <div>
                                                <span class="badge highlight-badge me-2">
                                                    <i class="fas fa-redo me-1"></i>@exercise.Series серии
                                                </span>
                                                <span class="badge highlight-badge">
                                                    <i class="fas fa-sync-alt me-1"></i>@exercise.Repetitions повторения
                                                </span>
                                            </div>
                                        </div>
                                        <div class="d-flex gap-2">
                                            <a href="@exercise.VideoUrl" target="_blank" class="btn btn-gradient flex-grow-1">
                                                <i class="fas fa-play me-2"></i>Видео
                                            </a>
                                            <a href="/Exercise/Details/@exercise.Id" class="btn btn-outline-dark flex-grow-1">
                                                <i class="fas fa-info-circle me-2"></i>Детайли
                                            </a>
                                        </div>
                                        <!-- Секция за коментари -->
                                        <div class="comment-section" id="comment-section-@exercise.Id">
                                            <div class="container input-container">
                                                <input required="required"
                                                       class="inp"
                                                       id="comment-@exercise.Id"
                                                       placeholder=" ">
                                                <span class="content">Коментар</span>
                                            </div>
                                            <button class="submit-comment-btn"
                                                    onclick="submitComment(@exercise.Id)">
                                                <i class="fas fa-paper-plane me-2"></i>Изпрати забележка
                                            </button>
                                        </div>
                                        <div class="disagree-text" id="disagree-text-@exercise.Id">
                                            ⚠️ Маркирахте, че не сте съгласни с това упражнение
                                        </div>
                                        <div id="posted-comment-section-@exercise.Id" style="display: none; margin-top:10px;">
                                            <div id="posted-comment-@exercise.Id" style="font-weight: bold; margin-bottom: 10px;"></div>
                                            <button class="btn btn-sm btn-warning me-2" onclick="editComment(@exercise.Id)">Редактиране</button>
                                            <button class="btn btn-sm btn-danger" onclick="deleteComment(@exercise.Id)">Изтрий</button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination -->
        <div class="pagination">
            <button id="prev-btn" disabled>Предишна</button>
            <button id="next-btn">Следваща</button>
        </div>

        <!-- Action Buttons -->
        <div class="text-center mt-6" data-aos="fade-up">
            <button class="btn-gradient me-3">
                <i class="fas fa-check-circle me-2"></i>Приеми плана
            </button>
            <button class="btn btn-outline-dark px-4">
                <i class="fas fa-times-circle me-2"></i>Откажи
            </button>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script src="https://cdn.jsdelivr.net/particles.js/2.0.0/particles.min.js"></script>
    <script>
        AOS.init({
            duration: 800,
            once: true,
            easing: 'ease-out-quart'
        });

        // Пагинация
        const workoutsPerPage = 1;
        let currentPage = 1;
        const workouts = document.querySelectorAll('.workout-card-container');
        const totalPages = Math.ceil(workouts.length / workoutsPerPage);

        function showPage(page) {
            workouts.forEach((workout, index) => {
                workout.style.display = (index >= (page - 1) * workoutsPerPage && index < page * workoutsPerPage) ? 'block' : 'none';
            });
            document.getElementById('prev-btn').disabled = page === 1;
            document.getElementById('next-btn').disabled = page === totalPages;
        }

        document.getElementById('prev-btn').addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage--;
                showPage(currentPage);
            }
        });

        document.getElementById('next-btn').addEventListener('click', () => {
            if (currentPage < totalPages) {
                currentPage++;
                showPage(currentPage);
            }
        });
        showPage(currentPage);

        // Particles инициализация
        document.addEventListener("DOMContentLoaded", function () {
            var particlesConfig = {
                "particles": {
                    "number": {
                        "value": 30,
                        "density": { "enable": true, "value_area": 800 }
                    },
                    "color": { "value": "#ffffff" },
                    "opacity": { "value": 0.3 },
                    "size": { "value": 3 },
                    "line_linked": { "enable": false },
                    "move": { "enable": true, "speed": 2 }
                },
                "interactivity": {
                    "events": { "onhover": { "enable": false }, "onclick": { "enable": false } }
                },
                "retina_detect": true
            };
            particlesJS("particles-below", particlesConfig);
            particlesJS("particles-above", particlesConfig);
        });

        // Функции за коментарите
        function toggleComment(exerciseId) {
            const commentSection = document.getElementById(`comment-section-${exerciseId}`);
            const disagreeText = document.getElementById(`disagree-text-${exerciseId}`);
            const checkbox = document.getElementById(`ex-check-${exerciseId}`);

            if (checkbox.checked) {
                commentSection.classList.add('active');
                disagreeText.style.display = 'block';
            } else {
                commentSection.classList.remove('active');
                disagreeText.style.display = 'none';
            }
        }

        function submitComment(exerciseId) {
            const comment = document.getElementById(`comment-${exerciseId}`).value.trim();
            if (!comment) {
                alert('Моля въведете коментар преди изпращане!');
                return;
            }

            const requestData = {
                exerciseId: exerciseId,
                trainingPlanId: @Model.Id,
                content: comment
            };

            fetch('/ExerciseFeedback/SubmitComment', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('#__RequestVerificationToken').value
                },
                body: JSON.stringify(requestData)
            })
            .then(async response => {
                const data = await response.json();
                if (!response.ok) throw new Error(data.error || 'Неизвестна грешка');
                return data;
            })
            .then(data => {
                if (data.success) {
                    document.getElementById(`posted-comment-${exerciseId}`).textContent = comment;
                    document.getElementById(`posted-comment-section-${exerciseId}`).style.display = 'block';
                    document.getElementById(`comment-${exerciseId}`).value = '';
                    document.getElementById(`ex-check-${exerciseId}`).checked = false;
                    toggleComment(exerciseId);
                } else {
                    alert('Грешка: ' + (data.error || 'Неуспешно изпращане'));
                }
            })
            .catch(err => {
                console.error('Fetch error:', err);
                alert('Грешка при изпращане: ' + err.message);
            });
        }

        function editComment(exerciseId) {
            const comment = prompt('Въведете нов коментар:');
            if (comment) {
                // Тук може да добавите логика за редакция
                document.getElementById(`posted-comment-${exerciseId}`).textContent = comment;
            }
        }

        function deleteComment(exerciseId) {
            if (confirm('Сигурни ли сте, че искате да изтриете коментара?')) {
                document.getElementById(`posted-comment-section-${exerciseId}`).style.display = 'none';
            }
        }
    </script>
</body>
</html>